{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","useState","movePx","setMovePx","maxWidth","className","style","width","transform","transition","map","image","index","src","alt","type","onClick","currentMovePx","i","disabled","App","state","this","inputWidth","length","name","value","min","max","onChange","event","setState","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5142efd7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images, itemWidth, frameSize, step, animationDuration,\n}) => {\n  const [movePx, setMovePx] = useState(0);\n  const totalWidth = -(itemWidth * 10);\n  const maxWidth = totalWidth + itemWidth * frameSize;\n\n  const handleNextEmojiClick = () => {\n    setMovePx((currentMovePx) => {\n      if (currentMovePx - itemWidth * step < (maxWidth)) {\n        for (let i = itemWidth * step; i !== 0; i -= itemWidth) {\n          if (currentMovePx - i === maxWidth) {\n            return currentMovePx - i;\n          }\n        }\n      }\n\n      return currentMovePx - itemWidth * step;\n    });\n  };\n\n  const handlePrevEmojiClick = () => {\n    setMovePx((currentMovePx) => {\n      if (currentMovePx + itemWidth * step > 0) {\n        for (let i = itemWidth; i !== 0; i += itemWidth) {\n          if (currentMovePx + i === 0) {\n            return currentMovePx + i;\n          }\n        }\n      }\n\n      return currentMovePx + itemWidth * step;\n    });\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"container\" style={{ width: frameSize * itemWidth }}>\n        <div\n          className=\"container2\"\n          style={{\n            transform: `translateX(${movePx}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          <ul className=\"Carousel__list\">\n            {images.map((image, index) => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={`emoji ${index + 1}`}\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__buttons-button\"\n          onClick={handlePrevEmojiClick}\n          disabled={movePx === 0}\n        >\n          {'Prev <<'}\n        </button>\n        <button // style buttons so that they look like arrows\n          type=\"button\"\n          className=\"Carousel__buttons-button\" // add a disabled class and style for this class\n          onClick={handleNextEmojiClick}\n          disabled={movePx === maxWidth}\n          data-cy=\"next\"\n        >\n          {'Next >>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, step, animationDuration,\n    } = this.state;\n\n    const inputWidth = { width: 300 };\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n        />\n\n        {`Emoji Width (${itemWidth})`}\n        <input\n          type=\"range\"\n          name=\"itemWidth\"\n          style={inputWidth}\n          value={itemWidth}\n          step={5}\n          min={60}\n          max={200}\n          onChange={event => {\n            this.setState({ itemWidth: +event.target.value });\n          }}\n        />\n        {`Frame Size (${frameSize})`}\n        <input\n          type=\"range\"\n          name=\"frameSize\"\n          style={inputWidth}\n          value={frameSize}\n          step={1}\n          min={1}\n          max={5}\n          onChange={event => {\n            this.setState({ frameSize: +event.target.value });\n          }}\n        />\n        {`Step (${step})`}\n        <input\n          type=\"range\"\n          name=\"step\"\n          style={inputWidth}\n          value={step}\n          step={1}\n          min={1}\n          max={5}\n          onChange={event => {\n            this.setState({ step: +event.target.value });\n          }}\n        />\n        {`Animation Duration (${animationDuration})`}\n        <input\n          type=\"range\"\n          name=\"animationDuration\"\n          style={inputWidth}\n          value={animationDuration}\n          step={100}\n          min={100}\n          max={3000}\n          onChange={event => {\n            this.setState({ animationDuration: +event.target.value });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}